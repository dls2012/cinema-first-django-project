from django.contrib.auth import login, logout, update_session_auth_hash
from django.contrib.auth.models import User
from django.shortcuts import render, redirect
from django.urls import reverse_lazy, reverse

from .models import Category, Cinema, Comment, Profile, Ip
from .forms import LoginForm, RegisterForm, CinemaForm, CommentForm, EditAccountFrom, EditProfileForm
from django.contrib import messages
from django.views.generic import ListView, DetailView, CreateView, UpdateView, DeleteView
from .tests import get_user_ip

# Create your views here.
# –§—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –∫–ª–∞—Å—Å—ã —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–¥—å –Ω–∞–∑—ã–≤–∞—é—Ç—å—Å—è –í—å—é—à–∫–∞–º–∏
# def index_view(request):
#     cinemas = Cinema.objects.all()
#     context = {
#         'cinemas': cinemas,
#         'title': 'CinemaGo —Å–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ'
#     }
#
#     return render(request, 'cinema_go/index.html', context)

class CinemaListView(ListView):
    model = Cinema
    context_object_name = 'cinemas'
    template_name = 'cinema_go/index.html'
    extra_context = {
        'title': 'CinemaGo —Å–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ'
    }


# ==================================================================================================
# –í—å—é—à–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
# def cinema_category_view(request, pk):
#     cinemas = Cinema.objects.filter(category_id=pk)
#     category = Category.objects.get(pk=pk)
#     context = {
#         'cinemas': cinemas,
#         'title': f'–°–º–æ—Ç–µ—Ä—Ç—å: {category.title}'
#     }
#     return render(request, 'cinema_go/index.html', context)


class CinemaListByCategory(CinemaListView):

    # –ú–µ—Ç–æ–¥ —á—Ç–æ –±—ã –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    def get_queryset(self):
        cinemas = Cinema.objects.filter(category_id=self.kwargs['pk'])
        return cinemas

    # –ú–µ—Ç–æ–¥ —á—Ç–æ –±—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —è—Ç–æ —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    def get_context_data(self, *, object_list=None, **kwargs):
        context = super().get_context_data()  # –°–æ–∑–¥–∞–ª–∏ –ø—É—Å—Ç–π–æ —Å–ª–æ–≤–∞—Ä—å –º–µ—Ç–æ–¥–∞
        category = Category.objects.get(pk=self.kwargs['pk'])
        context['title'] = f'–°–º–æ—Ç–µ—Ä—Ç—å: {category.title}'
        return context


# ==================================================================================================
# –í—å—é—à–∫–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–µ—Ç–∞–ª–∏ –∫–∏–Ω–æ—Ñ–∏–ª—å–º–∞
# def cinema_detail_view(request, pk):
#     cinema = Cinema.objects.get(pk=pk)  # –ü–æ–ª—É—á–∏–º —Ñ–∏–ª—å–º –ø–æ id
#
#     context = {
#         'title': cinema.title,
#         'cinema': cinema
#     }
#
#     return render(request, 'cinema_go/cinema_detail.html', context)

class CinemaDetailView(DetailView):
    model = Cinema
    context_object_name = 'cinema'

    def get_context_data(self, **kwargs):
        context = super().get_context_data()
        cinema = Cinema.objects.get(pk=self.kwargs['pk'])
        cinemas = Cinema.objects.filter(category=cinema.category)[::-1][:3]
        context['title'] = cinema.title
        context['cinemas'] = cinemas
        context['comments'] = Comment.objects.filter(cinema=cinema)

        ip = get_user_ip(self.request)
        user_ip = Ip.objects.filter(ip=ip, cinema=cinema)
        if not user_ip:
            ip = Ip.objects.create(ip=ip, cinema=cinema)
            ip.save()

        if self.request.user.is_authenticated:
            context['form'] = CommentForm()


        return context


# ==================================================================================================
def user_login_view(request):
    if request.method == 'POST':
        form = LoginForm(data=request.POST)
        if form.is_valid():
            user = form.get_user()  # –ú–µ—Ç–æ–¥–æ–º –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –ë–î –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user:  # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                login(request, user)  # –ü—Ä–∏ –ø–æ–º–æ—â–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Ö–æ–¥–∏–º –≤ –∞–∫–∫–∞—É–Ω—Ç
                messages.success(request, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {user.username}')
                return redirect('main')
            else:
                messages.error(request, '–ù–µ –≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
                return redirect('login')
        else:
            messages.error(request, '–ù–µ –≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
            return redirect('login')

    else:
        form = LoginForm()  # –í –ø—Ä–µ–µ–º–µ–Ω–Ω—É—é

    context = {
        'title': '–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç',
        'form': form
    }

    return render(request, 'cinema_go/login.html', context)


def user_logout_view(request):
    logout(request)
    messages.warning(request, '–í—ã –≤—ã—à–ª–∏ –∏–∑ –ê–∫–∫–∞—É–Ω—Ç–∞ üòí')
    return redirect('main')


def register_view(request):
    if request.method == 'POST':
        form = RegisterForm(request.POST)
        if form.is_valid():
            user = form.save()
            profile = Profile.objects.create(user=user)  # –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            profile.save()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º
            messages.success(request, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.\n–í–æ–π–¥–∏—Ç–µ –≤ –ê–∫–∫–∞—É–Ω—Ç')
            return redirect('login')
        else:
            for field in form.errors:  # –ü—Ä–æ—Ö–æ–¥–∏–º —Ü–∏–∫–ª–æ–º –ø–æ –ø–æ–ª—è–º –≤ –∫—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –æ—à–∏–±–∫–∏
                messages.error(request, form.errors[field].as_text())
                return redirect('registration')
    else:
        form = RegisterForm()

    context = {
        'title': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
        'form': form
    }

    return render(request, 'cinema_go/register.html', context)


# ===========================================================

# –í—å—é—à–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∏–Ω–æ—Ñ–∏–ª—å–º–æ–≤
# def add_cinema_view(request):
#     if request.user.is_staff:
#         if request.method == 'POST':
#             form = CinemaForm(request.POST, request.FILES) # –ü–æ–ª—É—á–∏–º –∏–∑ —Ñ–æ—Ä–º—ã —Ç–µ–∫—Å—Ç –∏ —Ñ–∞–π–ª—ã
#             if form.is_valid():
#                 cinema = Cinema.objects.create(**form.cleaned_data)
#                 cinema.save()
#                 return redirect('cinema', cinema.pk)
#             else:
#                 messages.warning(request, '–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
#                 return redirect('add_cinema')
#
#         else:
#             form = CinemaForm()
#
#         context = {
#             'title': '–î–æ–±–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ',
#             'form': form
#         }
#         return render(request, 'cinema_go/add_cinema.html', context)
#     else:
#         return redirect('main')

class CinemaCreateView(CreateView):
    model = Cinema
    form_class = CinemaForm
    template_name = 'cinema_go/add_cinema.html'
    extra_context = {
        'title': '–î–æ–±–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ'
    }

    def form_valid(self, form): # –í –º–µ—Ç–æ–¥–µ –ø—Ä–∏—Å–≤–∞–µ–º–∞–µ–º –ê–≤—Ç–æ—Ä–∞ –∫–∏–Ω–æ—Ñ–∏–ª—å–º—É
        form.instance.author = self.request.user
        return super().form_valid(form)

    # –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    def get(self, request, *args, **kwargs):
        if not request.user.is_staff:  # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫
            return redirect('main')
        else:
            return super(CinemaCreateView, self).get(request, *args, **kwargs)


class CinemaUpdateView(UpdateView):
    model = Cinema
    form_class = CinemaForm
    template_name = 'cinema_go/add_cinema.html'
    extra_context = {
        'title': '–ò–∑–º–µ–Ω–∏—Ç—å –≤–∏–¥–µ–æ'
    }

    # –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    def get(self, request, *args, **kwargs):
        if not request.user.is_staff:  # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫
            return redirect('main')
        else:
            return super(CinemaUpdateView, self).get(request, *args, **kwargs)


class CinemaDeleteView(DeleteView):
    model = Cinema
    context_object_name = 'cinema'
    success_url = reverse_lazy('main')

    # –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    def get(self, request, *args, **kwargs):
        if not request.user.is_staff:  # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫
            return redirect('main')
        else:
            return super(CinemaDeleteView, self).get(request, *args, **kwargs)


class SearchResult(CinemaListView):
    def get_queryset(self):
        word = self.request.GET.get('q')
        cinemas = Cinema.objects.filter(title__iregex=word)
        return cinemas


def save_comment(request, pk):
    form = CommentForm(request.POST)
    if form.is_valid():
        comment = form.save(commit=False)
        comment.user = request.user
        comment.cinema = Cinema.objects.get(pk=pk)
        comment.save()
        return redirect('cinema', pk)


class CommentUpdate(UpdateView):
    model = Comment
    form_class = CommentForm
    template_name = 'cinema_go/cinema_detail.html'

    def get_context_data(self, **kwargs):
        context = super().get_context_data()
        comment = Comment.objects.get(pk=self.kwargs['pk'])  # –ü–æ–ª—É—á–∏–º –∫–æ–º–µ–Ω—Ç –ø–æ id
        cinema = Cinema.objects.get(pk=comment.cinema.pk)  # –ü–æ–ª—É—á–∏–º –∫–∏–Ω–æ—Ñ–∏–ª—å–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        cinemas = Cinema.objects.filter(category=cinema.category)[::-1][:3]  # –ü–æ–ª—É—á–∏–º –∫–∏–Ω–æ—Ñ–∏–ª—å–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–∏–ª—å–º–∞

        context['title'] = cinema.title
        context['cinema'] = cinema
        context['cinemas'] = cinemas
        context['comments'] = Comment.objects.filter(cinema=cinema)
        return context

    def get_success_url(self):
        return reverse('cinema', kwargs={'pk': self.object.cinema.pk})



# –†–ï–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—å—é—à–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
def comment_delete(request, cinema_pk, comment_pk):
    user = request.user if request.user.is_authenticated else None
    comment = Comment.objects.get(user=user, pk=comment_pk, cinema=cinema_pk)
    comment.delete()
    return redirect('cinema', cinema_pk)

def profile(request):
    user = request.user if request.user.is_authenticated else None
    if user:
        profile = Profile.objects.get(user=user)
        cinemas = Cinema.objects.filter(author=user)

        context = {
            'title': f'–ü—Ä–æ—Ñ–∏–ª—å {user.username}',
            'profile': profile,
            'cinemas': cinemas
        }
        return render(request, 'cinema_go/profile.html', context)
    else:
        return redirect('login')


# –í—å—é—à–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ê–∫–∫–∞—É–Ω—Ç–∞
def edit_account_profile_view(request):
    if request.user.is_authenticated:
        profile = Profile.objects.get(user=request.user)
        if profile:
            account_form = EditAccountFrom(instance=request.user)
            profile_form = EditProfileForm(instance=request.user.profile)

            context = {
                'title': f'–ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö {request.user.username}',
                'account_form': account_form,
                'profile_form': profile_form
            }
            return render(request, 'cinema_go/edit.html', context)
        else:
            return redirect('login')
    else:
        return redirect('login')


def edit_profile_view(request):
    if not request.user.is_authenticated:
        return redirect('login')
    else:
        if request.method == 'POST':
            edit_profile = EditProfileForm(request.POST, request.FILES, instance=request.user.profile)
            if edit_profile.is_valid():
                edit_profile.save()
                messages.success(request, '–î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã')
                return redirect('profile')
            else:
                messages.error(request, '–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
                return redirect('change')


def edit_account_view(request):
    if not request.user.is_authenticated:
        return redirect('login')
    else:
        if request.method == 'POST':
            edit_account_form = EditAccountFrom(request.POST, instance=request.user)
            if edit_account_form.is_valid():
                edit_account_form.save()
                data = edit_account_form.cleaned_data  # –ü–æ–ª—É—á–∏–º —Ñ–æ—Ä–º—É –≤ –≤–∏–¥–µ —Å–æ–≤–∞—Ä—è
                user = User.objects.get(id=request.user.id)
                if user.check_password(data['old_password']):
                    if data['old_password'] and data['new_password'] == data['confirm_password']:
                        user.set_password(data['new_password'])
                        user.save()
                        update_session_auth_hash(request, user)  # –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –æ—Å—Ç–∞–≤–∏—Ç –Ω–∞—Å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏
                        messages.success(request, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã')
                        return redirect('profile')
                    else:
                        for field in edit_account_form.errors:
                            messages.error(request, edit_account_form.errors[field].as_text())
                            return redirect('change')
                else:
                    for field in edit_account_form.errors:
                        messages.error(request, edit_account_form.errors[field].as_text())
                        return redirect('change')

                return redirect('profile')

            else:
                for field in edit_account_form.errors:
                    messages.error(request, edit_account_form.errors[field].as_text())
                    return redirect('change')






